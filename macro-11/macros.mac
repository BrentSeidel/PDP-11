	.NLIST
;
;  Define some macros.
;
	.SBTTL Macros - Macro definitions
;
;  These are macros for the various textio routines
;
	.SBTTL TEXTIO - Macros for console input and output
.MACRO	put msg, len
	MOV len, -(SP)
	MOV msg, -(SP)
	JSR PC, put
.ENDM	put

.MACRO	puts text
	MOV text, -(SP)
	JSR PC, puts
.ENDM	puts

.MACRO	gets str
	MOV str, -(SP)
	JSR PC, gets
.ENDM	gets

.MACRO	putsln text
	MOV text, -(SP)
	JSR PC, putsln
.ENDM	putsln

.MACRO	putln msg, len
	MOV len, -(SP)
	MOV msg, -(SP)
	JSR PC, putln
.ENDM	putln

.MACRO	putoct num
        MOV num, -(SP)
        JSR PC, putoct
.ENDM	putoct

.MACRO	putdec num
	MOV num, -(SP)
	JSR PC, putdec
.ENDM	putdec

.MACRO	puthex num
	MOV num, -(SP)
	JSR PC, puthex
.ENDM	puthex

	.SBTTL STRING - Macros for string functions.
;
;  Macros for strings.  A string is a block of up to 255 bytes
;  of memory with a max length and current length attached.
;
;  The string macro allocates space for a string and sets it to
;  an empty string.
;
.MACRO	string lbl, max
	.SAVE
	.PSECT STRING,GBL,CON,REL,RW,D
lbl:	.BYTE max
	.BYTE 0
	.BLKB max
	.RESTORE
.ENDM	string
;
;  The text macro is used to define a fixed text message.
;
.MACRO	text lbl, txt
	.SAVE
	.PSECT TEXT,GBL,CON,REL,RO,D
	.NCHR $1, <txt>
lbl:	.BYTE $1
	.BYTE $1
	.ASCII /txt/
	.RESTORE
.ENDM	text
;
;  Trim whitespace characters from the end of a string.
;
.MACRO	trimts str
	MOV str, -(SP)
	JSR PC, trimts
.ENDM	trimts
;
;  Generalized trim macro selects which trims to call
;
.MACRO	trim str,ls,ts,lz,tz
.IF	NB ls
	MOV str, -(SP)
	JSR PC, trimls
.ENDC
.IF	NB ts
	MOV str, -(SP)
	JSR PC, trimts
.ENDC
.IF	NB lz
	MOV str, -(SP)
	JSR PC, trimlz
.ENDC
.IF	NB tz
	MOV str, -(SP)
	JSR PC, trimtz
.ENDC
.ENDM	trim
;
;  Get the length and max length of a string
;
.MACRO	strlen str, len
	MOV str, -(SP)
	JSR PC, strlen
	MOV (SP)+, len
.ENDM	strlen

.MACRO	strmax str, max
	MOV str, -(SP)
	JSR PC, strmax
	MOV (SP)+, max
.ENDM	strmax
;
;  Extract a character from a string
;
.MACRO	strchr str, pos, chr
	MOV str, -(SP)
	MOV pos, -(SP)
	JSR PC, strchr
	MOV (SP)+, chr
.ENDM	strchr
;
;  Convert a character to a string
;
.MACRO	chrstr str, chr
	MOV str, -(SP)
	MOV chr, -(SP)
	JSR PC, chrstr
.ENDM	chrstr
;
;  Find a character in a string
;
.MACRO	sfindc str, chr, pos
	MOV str, -(SP)
	MOV chr, -(SP)
	JSR PC, sfindc
	MOV (SP)+, pos
.ENDM	sfindc
;
;  Convert unsigned integers to strings in octal, decimal,
;  and hexidecimal
;
.MACRO	octstr str, num
	MOV str, -(SP)
	MOV num, -(SP)
	JSR PC, octstr
.ENDM	octstr

.MACRO	decstr str, num
	MOV str, -(SP)
	MOV num, -(SP)
	JSR PC, decstr
.ENDM	decstr

.MACRO hexstr str, num
	MOV str, -(SP)
	MOV num, -(SP)
	JSR PC, hexstr
.ENDM	hexstr
;
;  Convert strings containing numbers to unsigned
;  integers in octal, decimal, and hexidecimal
;
.MACRO	stroct str, num
	MOV str, -(SP)
	JSR PC, stroct
	MOV (SP)+, num
.ENDM	stroct

.MACRO	strdec str, num
	MOV str, -(SP)
	JSR PC, strdec
	MOV (SP)+, num
.ENDM	strdec

.MACRO	strhex str, num
	MOV str, -(SP)
	JSR PC, strhex
	MOV (SP)+, num
.ENDM	strhex
;
;  Extract a substring from a string.
;
.MACRO	substr src, dest, start, count
	MOV src, -(SP)
	MOV dest, -(SP)
	MOV start, -(SP)
	MOV count, -(SP)
	JSR PC, substr
.ENDM	substr
;
;  Other string manipulation
;
.MACRO	cpstr src, dest
	MOV src, -(SP)
	MOV dest, -(SP)
	JSR PC, cpstr
.ENDM	cpstr

.MACRO	appstr src, dest
	MOV src, -(SP)
	MOV dest, -(SP)
	JSR PC, appstr
.ENDM	appstr
;
;  Convert strings to upper or lower case
;
.MACRO	upcase str
	MOV str, -(SP)
	JSR PC, upcase
.ENDM	upcase

.MACRO	locase str
	MOV str, -(SP)
	JSR PC, locase
.ENDM	locase
;
;  Compare strings for equality
;
.MACRO	streq str1, str2
	MOV str1, -(SP)
	MOV str2, -(SP)
	JSR PC, streq
	TST (SP)+
.ENDM	streq
;
;  Convert RAD50 to a string
;
.MACRO r50str str, r50
	MOV str, -(SP)
	MOV r50, -(SP)
	JSR PC, r50str
.ENDM	r50str
;
;  Convert a string to RAD50
;
.MACRO	strr50 str, r50
	MOV str, -(SP)
	JSR PC, strr50
	MOV (SP)+, r50
.ENDM	strr50
	.LIST
