;
;  Test program to test various library routines.
;
	.INCLUDE /$COMMON.MAC/
	.INCLUDE /MACROS.MAC/
	.PSECT CODE,SAV,CON,GBL
	.TITLE TEST Program to test various libarary routines
	.IDENT	"X00.00"
	.ENABL GBL
;
	.SBTTL start - Entry point to print message
start::
	BIS #flglz+flgsgn, flgnum
	putsln #hello
cloop:	puts #prompt		; Ask for a string
	gets #str		; Get the string
	trim #str,ts=1,lz=1,ls=1	; Trim the string
	upcase #str
	sfindc #str, #32., R1
	substr #str, #cmd, #0, R1
;
;  Check for EXIT command
;
	streq #cmd, #cexit
	BNE 100$
	JMP done
100$:	substr #str, #rest, R1, #0
	trim #rest, ls=1
;
;  Check for OCTAL command
;
	streq #cmd, #coct
	BNE 101$
	JMP octal
;
;  Check for DEC command
;
101$:	streq #cmd, #cdec
	BNE 102$
	JMP deci
;
;  Check for HEX command
;
102$:	streq #cmd, #chex
	BNE 103$
	JMP hexi
;
;  Check for LIST command
;
103$:	streq #cmd #clist
	BNE 104$
	JMP list
;
;  No recognized command given
;
104$:	cpstr #firstw, #outbuf
	appstr #cmd, #outbuf
	appstr #vbar, #outbuf
	putsln #outbuf
;
	cpstr #trest, #outbuf
	appstr #rest, #outbuf
	appstr #vbar, #outbuf
	putsln #outbuf
;
	strchr #str, #5, R0
	chrstr #temp, R0
	cpstr #msg2, #outbuf
	appstr #temp, #outbuf
	appstr #vbar, #outbuf
	putsln #outbuf
;
	upcase #str
	puts #msg2
	puts #str
	putsln #vbar		; Put the uppercase string
	locase #str
	puts #msg2
	puts #str
	putsln #vbar		; Put the lowercase string
;
	puts #msg4		; Print the string's max len
	strmax #str, R0
	putdec R0
	JSR PC, newline
	puts #msg5		; Print the string's actual len
	strlen #str, R0
	putdec R0
	JSR PC, newline
;
	JMP cloop
;
octal:	stroct #rest, R1
	JSR PC, putnm1
	JMP cloop
;
deci:	strdec #rest, R1
	JSR PC, putnm1
	JMP cloop
;
hexi:	strhex #rest, R1
	JSR PC, putnm1
	JMP cloop
;
	.SBTTL Loop - To print numbers
list:	BIC #flglz+flgsgn, flgnum
	cpstr #rest, #str
	sfindc #str, #32., R1
	substr #str, #cmd, #0, R1
	substr #str, #rest, R1, #0
	trim #cmd,ls=1
	trim #rest,ls=1
	strdec #cmd, R1
	strdec #rest, R0
;
1$:	JSR PC, putnm1
	INC R1
	SOB R0, 1$
	JMP cloop
;
done:	.EXIT
;
;  Prints a number in octal, decimal, or hex.  The number is
;  passed in R1.  This is done by building a string and then
;  printing it all at once.
;
putnm1:	BIS #flgsgn, flgnum
	cpstr #sgnum, #outbuf
	octstr #temp, R1
	appstr #temp, #outbuf
	appstr #oct, #outbuf
	decstr #temp, R1
	appstr #temp, #outbuf
	appstr #dec, #outbuf
	hexstr #temp, R1
	appstr #temp, #outbuf
	appstr #hex, #outbuf
	putsln #outbuf
	BIC #flgsgn, flgnum
	cpstr #unum, #outbuf
	octstr #temp, R1
	appstr #temp, #outbuf
	appstr #oct, #outbuf
	decstr #temp, R1
	appstr #temp, #outbuf
	appstr #dec, #outbuf
	hexstr #temp, R1
	appstr #temp, #outbuf
	appstr #hex, #outbuf
	putsln #outbuf
	RTS PC
;
	.SBTTL Data - Space for text messages and strings
	text hello, <Hello world, again!>
	string str, 80.
	string outbuf, 80.
	string temp, 80.
	string cmd, 80.
	string rest, 80.
	text prompt, <CMD: >
	text enttxt, <Enter text: >
	text msg2, <You entered: |>
	text vbar, <|>
	text sgnum, <  The signed number is >
	text unum, <The unsigned number is >
	text msg4, <The string max len is: >
	text msg5, <The string length is:  >
	text oct, < Octal, >
	text dec, < Decimal, >
	text hex, < Hexidecimal >
	text firstw, <The first word |>
	text trest, <The rest is |>
	text cexit, <EXIT>
	text coct, <OCTAL>
	text cdec, <DEC>
	text chex, <HEX>
	text clist, <LIST>
	.END start
