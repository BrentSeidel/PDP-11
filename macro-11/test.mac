;
;  Test program to test various library routines.
;
	.INCLUDE /$COMMON.MAC/
	.INCLUDE /MACROS.MAC/
	.PSECT CODE,SAV,CON,GBL
	.TITLE TEST Program to test various libarary routines
	.IDENT	"X00.00"
	.ENABL GBL
;
; Need to include macros.mac to define common macros used here.
;
	.SBTTL start - Entry point to print message
start::
	BIS #flglz+flgsgn, flgnum
	putsln #hello
	puts #enttxt		; Ask for a string
	gets #str		; Get the string
	trim #str,ts=1,lz=1,tz=1,ls=1	; Trim the string
	cpstr #msg2, #outbuf
	appstr #str, #outbuf
	appstr #vbar, #outbuf
	putsln #outbuf		; Print the string
;
	sfindc #str, #32., R1
;	MOV #str, -(SP)
;	MOV #32., -(SP)
;	JSR PC, sfindc		; Look for a space
;	MOV (SP)+, R1
;	ADD #2, SP
	JSR PC, putnm1
;
	strchr #str, #5, R0
	chrstr #temp, R0
	cpstr #msg2, #outbuf
	appstr #temp, #outbuf
	appstr #vbar, #outbuf
	putsln #outbuf
;
	upcase #str
	puts #msg2
	puts #str
	putsln #vbar		; Put the uppercase string
	locase #str
	puts #msg2
	puts #str
	putsln #vbar		; Put the lowercase string
;
	puts #msg4		; Print the string's max len
	strmax #str, R0
	putdec R0
	JSR PC, newline
	puts #msg5		; Print the string's actual len
	strlen #str, R0
	putdec R0
	JSR PC, newline
;
	puts #entoct
	gets #str
	stroct #str, R1
	JSR PC, putnm1
;
	puts #entdec
	gets #str
	strdec #str, R1
	JSR PC, putnm1
;
	puts #enthex
	gets #str
	strhex #str, R1
	JSR PC, putnm1
;
	.SBTTL Loop - To print numbers
	BIC #flglz+flgsgn, flgnum
	puts #estart
	gets #str
	trim #str, ls=1
	strdec #str, R1
	puts #ecount
	gets #str
	trim #str, ls=1
	strdec #str, R0
;
l1:	JSR PC, putnm1
	INC R1
	SOB R0, l1
;
	octstr #str, #173757
	puts #msg2b
	puts #str
	putsln #vbar
	octstr #short1, #173757
	puts #msg2c
	puts #short1
	putsln #vbar
;
	decstr #str, #31415.
	puts #msg2b
	puts #str
	putsln #vbar
	decstr #short2, #31415.
	puts #msg2c
	puts #short2
	putsln #vbar
;
	hexstr #str, #7777
	puts #msg2b
	puts #str
	putsln #vbar
	hexstr #short3, #7777
	puts #msg2c
	puts #short3
	putsln #vbar
;
	JSR PC, newline
	putsln #hello
	JSR PC, newline
	substr #hello, #str, #6, #5
	putsln #str
;
	cpstr #hello, #str
	putsln #str
	cpstr #hello, #short1
	putsln #short1
	.EXIT
;
;  Prints a number in octal, decimal, or hex.  The number is
;  passed in R1
;
;
;  Print numbers by building a string and then printing it all
;  at once.
;
putnm1:	cpstr #msg3, #outbuf
	octstr #temp, R1
	appstr #temp, #outbuf
	appstr #oct, #outbuf
	decstr #temp, R1
	appstr #temp, #outbuf
	appstr #dec, #outbuf
	hexstr #temp, R1
	appstr #temp, #outbuf
	appstr #hex, #outbuf
	putsln #outbuf
	RTS PC
;
;  Print numbers using direct I/O calls
;
putnm2:	puts #msg3
	putoct R1
	puts #oct
	putdec R1
	puts #dec
	puthex R1
	putsln #hex
	RTS PC

	.SBTTL Data - Space for text messages and strings
	text hello, <Hello world, again!>
	string str, 80.
	string short1, 5
	string short2, 4
	string short3, 3
	string outbuf, 80.
	string temp, 80.
	text msg2c <The truncated number is |>
	text enttxt, <Enter text: >
	text msg2, <You entered: |>
	text vbar, <|>
	text msg2b, <The number is |>
	text msg3, <The number is >
	text msg4, <The string max len is: >
	text msg5, <The string length is:  >
	text entoct, <Enter an octal number: >
	text entdec, <Enter a decimal number: >
	text enthex, <Enter a hexidecimal number: >
	text estart, <Enter starting value: >
	text ecount, <Enter count: >
	text oct, < Octal, >
	text dec, < Decimal, >
	text hex, < Hexidecimal >

	.END start
