;
;  This file contains file related functions.
;
	.INCLUDE /$COMMON.MAC/
	.INCLUDE /MACROS.MAC/
	.TITLE FILES - File related functions
	.IDENT "X00.01"
	.ENABL GBL
;
	.PSECT FILE,RO,CON,GBL,I
	.SBTTL PARSEF - Parse a filespec into the FIRQB
;
;  Parses a string containing a filespec and fills the appropriate
;  fields in the FIRQB.  If the usedef parameter is not zero, the saved
;  default values are copied into the FIRQB before parsing.
;  Called as:
;  MOV str, -(SP)
;  MOV usedef, -(SP)
;  JSR PC, parsef
str = 8.
usedef = 6
parsef::
	MOV R0, -(SP)
	MOV R1, -(SP)
	JSR PC, clrxrb
	JSR PC, clrfqb
;
	TST usedef(SP)		; Check if default values are used
	BEQ 1$
	MOV defppn, @#firqb+fqppn
	MOV defnam, @#firqb+fqnam1
	MOV defnam+2, @#firqb+fqnam1+2
	MOV defext, @#firqb+fqext
	MOV defdev, @#firqb+fqdev
	MOV defdnm, @#firqb+fqdevn

1$:	MOV str(SP), R0		; Get string
	INC R0			; Point to string length
	MOVB (R0), R1
	BIC #byteh, R1
	MOV R1, @#xrb+xrlen
	MOV R1, @#xrb+xrbc
	INC R0
	MOV R0, @#xrb+xrloc
	.FSS
;
	MOV (SP)+, R1
	MOV (SP)+, R0
	MOV (SP), 4(SP)
	ADD #4,SP
	RTS PC
;
	.SBTTL CHANCK - Check an I/O channel to see its status
;  This simply does a UU.FCB call on the channel with subfunction 1.
;  If no error is returned, the channel is open and a disk file.  If
;  NODEVC is returned, the channel is open and not a disk file.  If
;  NOTOPN is returned, the channel is not open.  If BSERR is returned,
;  then the passed channel number is out of range.
;  Called as:
;  MOV chan, -(SP)
;  JSR PC, chanck
;  MOV (SP)+, result
chan = 4
chanck::
	MOV R0, -(SP)
	MOV chan(SP), R0
	JSR PC, clrfqb
	MOVB #UU.FCB, @#firqb+fqfun
	MOVB #1, @#firqb+fqsizm
	MOVB R0, @#firqb+fqfil
	.UUO
	MOVB @#firqb, R0
	BIC #byteh, R0
	MOV R0, chan(SP)
	MOV (SP)+, R0
	RTS PC
;
	.SBTTL CHCLOS - Close an I/O channel
;  This does a CALFIP CLSFQ on the channel and updates other maintained
;  data structures.
;  Called as:
;  MOV chan, -(SP)
;  JSR PC, chclos
chan = 4
chclos::
	MOV R0, -(SP)
	JSR PC, clrfqb
	MOV chan(SP), R0
	ASL R0				; Use channel number times 2
	MOVB #CLSFQ, @#firqb+fqfun	; Close function
	MOV R0, @#firqb+fqfil
	CALFIP
	TSTB @#firqb			; Test for errors
	BNE 1$
	MOV #0, chflag(R0)		; Clear any channel flags
	MOV #0, chbuff(R0)		; No more channel buffer
1$:	MOV (SP)+, R0
	RTS PC
;
	.END
